{% schema %}
{
  "name": "Certified Trainers",
  "settings": [
       {
      "type": "text",
      "id": "section_id",
      "label": "Section ID",
      "default": "certified-trainers"
    },
     {
      "type": "text",
      "id": "section_title",
      "label": "Section Title",
      "default": "Lorem ipsum dolor sit amet"
    },
    {
      "type": "text",
      "id": "section_title2",
      "label": "Section Title",
      "default": "Lorem ipsum dolor sit amet"
    },
    {
      "type": "richtext",
      "id": "section_description",
      "label": "Section Description",
      "default": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>"
    },
    {
      "type": "select",
      "id": "title_alignment",
      "label": "Title Alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "select",
      "id": "desc_alignment",
      "label": "desc Alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "container_width",
      "label": "Container width",
      "min": 200,
      "max": 2000,
      "step": 20,
      "unit": "px",
      "default": 980
    },
    {
      "type": "select",
      "id": "alignment",
      "label": "Alignment",
      "options": [
        {
          "value": "flex-start",
          "label": "Flex Start"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "flex-end",
          "label": "Flex End"
        }
      ],
      "default": "center"
    },
    {
      "type": "url",
      "id": "button_1_link",
      "label": "Button 1 Link"
    },
    {
      "type": "text",
      "id": "button_1_text",
      "label": "Button 1 Text",
      "default": "Register Here"
    },
        
  ],
  "blocks": [
    {
      "type": "trainer",
      "name": "Trainer",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
      "type": "checkbox",
      "id": "show_content",
      "label": "Show Content",
      "default": false
    },
        {
          "type": "text",
          "id": "name",
          "label": "Name"
        },
        {
          "type": "text",
          "id": "certification",
          "label": "Certification"
        },
        {
          "type": "textarea",
          "id": "quote",
          "label": "Quote"
        },
        {
          "type": "text",
          "id": "rating",
          "label": "Rating (Stars)",
          "default": "5"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Certified Trainers",
      "category": "Custom"
    }
  ]
}
{% endschema %}



<section class="section--certified-trainers" id="{{ section.settings.section_id }}">
  {{ 'section--certified-trainers.css' | asset_url | stylesheet_tag }}
  <div class="section--title-block page-container" style="display: flex; justify-content: {{ section.settings.alignment }};max-width: {{ section.settings.container_width }}px;">
    <div>
      <h2 style="text-align: {{ section.settings.title_alignment }};">{{ section.settings.section_title }}</h2>
      <span style="text-align: {{ section.settings.title_alignment }};">{{ section.settings.section_description }}</span>
    </div>
  </div>

  <div id="certification_slide" class="splide">
    <div class="splide__track">
      <div class="splide__list section--trainers-container">
        {% for block in section.blocks %}
          <div class="splide__slide trainer-wrapper">
            {% if block.settings.image %}
              <img src="{{ block.settings.image | img_url: 'large' }}" alt="{{ block.settings.name }}">
            {% endif %}
  {% if block.settings.show_content %}
            <div class="trainer-info">
              <div class="trainer-info-container">
                <p class="rating">
                  {% for i in (1..block.settings.rating) %}
                    <span>
                      <svg xmlns="http://www.w3.org/2000/svg" width="18" height="17" viewBox="0 0 18 17" fill="none">
                        <path d="M8.08663 1.04906C8.43899 0.258569 9.56101 0.258571 9.91337 1.04906L11.5278 4.67082C11.6731 4.99685 11.9812 5.22069 12.3362 5.25816L16.2796 5.67436C17.1402 5.7652 17.487 6.8323 16.844 7.41169L13.8984 10.0663C13.6333 10.3052 13.5156 10.6674 13.5896 11.0166L14.4124 14.8956C14.5919 15.7422 13.6842 16.4017 12.9345 15.9693L9.49962 13.9882C9.19041 13.8098 8.80959 13.8098 8.50038 13.9882L5.06548 15.9693C4.31578 16.4017 3.40805 15.7422 3.58762 14.8956L4.41036 11.0166C4.48443 10.6674 4.36674 10.3052 4.10158 10.0663L1.15596 7.41169C0.513045 6.8323 0.859768 5.7652 1.72045 5.67436L5.66383 5.25816C6.01881 5.22069 6.3269 4.99685 6.47223 4.67082L8.08663 1.04906Z" fill="#DEBB06"/>
                      </svg>
                    </span>
                  {% endfor %}
                </p>
                <p class="quote">{{ block.settings.quote }}</p>
{% assign certification_value = block.settings.certification | strip %}

<div class="trainer-info-wrap">
  <p class="name">{{ block.settings.name }}</p>
  {% if certification_value != "" %}
    <span>|</span>
    <p class="certification">{{ certification_value }}</p>
  {% else %}
    <p class="certification"></p>
  {% endif %}
</div>
              </div>
            </div>
                             {% endif %}
          </div>
        {% endfor %}
      </div>
    </div>
  </div>

    {% if section.settings.section_title2 != blank %}
      <div class="section--title-block page-container" style="display: flex; justify-content: {{ section.settings.alignment }};">
        <div style="margin-top:100px; max-width: {{ section.settings.container_width }}px;">
          <h3 style="text-align: {{ section.settings.title_alignment }};">{{ section.settings.section_title2 }}</h3>
        </div>
      </div>
    {% endif %}
    {% if section.settings.button_1_link != blank and section.settings.button_1_text != blank %}
    <div class="section--hero-buttons">
      <a href="{{ section.settings.button_1_link }}" class="btn button-yg" style="display:block;">
        <span class="btn-label-down">{{ section.settings.button_1_text }}</span>
        <span class="btn-label-down">{{ section.settings.button_1_text }}</span>
      </a>
    </div>
    {% endif %}

</section>

<style>
  #shopify-section-template--18233198870570__section_certified_trainers_ipxpKR .section--hero-buttons {
    max-width: clamp(15%,12vw,25%);
    margin: 0 auto;
  }
  @media (max-width: 768px) {
    #shopify-section-template--18233198870570__section_certified_trainers_ipxpKR .section--hero-buttons {
      max-width:70%;
    }
  }
  .section--title-block.page-container {
    padding-bottom: 20px;
  }
  .section--certified-trainers .section--hero-buttons {
    margin-top: auto;
    padding-top: 8px;
    width: 100%;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
  }
  #{{ section.settings.section_id }} .section--title-block h2 {
    font-family: var(--font-anton);
    font-weight:400;
    color: #01241E;
    font-size: clamp(21px, 4vw, 40px);
  }
  #{{ section.settings.section_id }} .section--title-block span h3 {
    font-size: clamp(21px, 2vw, 32px);
    font-family: var(--font-poppins500);
    font-weight: 600;
    line-height: normal;
    color: #000;
  }
  #{{ section.settings.section_id }} .section--title-block span p {
    font-family: var(--font-poppins500);
    font-weight: 500;
    font-size: clamp(18px, 1.7vw, 28px);
    line-height: normal;
    color: #000;
  }
  @media (max-width: 768px) {
    .section--certified-trainers .section--hero-buttons .btn{
      width: 90%;
    }
  }
</style>

<link href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@splidejs/splide-extension-auto-scroll@0.5.3/dist/js/splide-extension-auto-scroll.min.js"></script>


<script>
document.addEventListener("DOMContentLoaded", function () {
  function initializeSplide() {
    var isMobile = window.matchMedia("(max-width: 768px)").matches;

    var splideOptions = {
      perMove: 1,
      gap: "20px",
      type: "loop",
      drag: isMobile ? true : 'free', // Conditional drag setting
      arrows: false,
      pagination: false,
      label: "Image Slider",
      reduceMotion: {
        speed: 0,
        rewindSpeed: 0,
        autoplay: true // Start with autoplay enabled
      },
      autoScroll: {
        speed: 0.8
      },
      breakpoints: {
        10000: { perPage: 5 },
        1920: { perPage: 4 },
        1600: { perPage: 3 },
        1120: { perPage: 2 },
        1024: { perPage: 2 },
        981: { perPage: 2 },
        768: { perPage: 2 },
        600: { perPage: 1, gap:"10px" }
      }
    };

    var splide = new Splide("#certification_slide", splideOptions);

    if (!isMobile) {
      splide.mount(window.splide.Extensions); // Mount extensions if not mobile
    } else {
      splide.mount(window.splide.Extensions); // Mount without extensions on mobile
    }

    return splide;
  }

  var splide = initializeSplide();

  function updateAutoplay() {
    var isMobile = window.matchMedia("(max-width: 768px)").matches;

    if (isMobile && !splide.Components.AutoScroll.isPaused()) {
      splide.Components.AutoScroll.play(); // Pause autoplay if on mobile
    } else if (!isMobile && splide.Components.AutoScroll.isPaused()) {
      splide.Components.AutoScroll.play(); // Resume autoplay if not mobile
    }
  }

  // Check autoplay status on resize
  window.addEventListener('resize', function() {
    // Re-initialize Splide on resize to apply the appropriate settings
    splide.destroy();
    splide = initializeSplide();
    updateAutoplay();
  });

  // Initial check on load
  updateAutoplay();
});
</script>

