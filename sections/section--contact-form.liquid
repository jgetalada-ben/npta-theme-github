{% schema %}
{
  "name": "Contact Form",
  "settings": [
     {
      "type": "text",
      "id": "section_id",
      "label": "Section ID",
      "default": "section-id"
    },
    
   {
      "type": "text",
      "id": "section_title",
      "label": "Section Title",
      "default": "Lorem ipsum dolor sit amet"
    },
    {
      "type": "richtext",
      "id": "section_description",
      "label": "Section Description",
      "default": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>"
    },
      {
      "type": "text",
      "id": "webhook_url",
      "label": "Zapier Webhook URL",
      "default": "https://hooks.zapier.com/hooks/catch/xxxxxx/"
    },
            {
      "type": "text",
      "id": "form_submit_label",
      "label": "Form Button Label",
      "default": "Sign Up Now",

  
    }
  ],
 "blocks": [
    {
      "type": "text_field",
      "name": "Text Field",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Field Label",
          "default": "Name"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder",
          "default": "Enter your name"
        }
      ]
    },
    {
      "type": "textarea",
      "name": "Textarea",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Field Label",
          "default": "Message"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder",
          "default": "Enter your message"
        }
      ]
    },
    {
      "type": "select",
      "name": "Dropdown",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Field Label",
          "default": "Options"
        },
        {
          "type": "text",
          "id": "options",
          "label": "Options (comma separated)",
          "default": "Option 1, Option 2, Option 3"
        }
      ]
    },
    {
      "type": "email",
      "name": "Email Field",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Field Label",
          "default": "Email"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder",
          "default": "Enter your email"
        }
      ]
    },
    {
      "type": "phone",
      "name": "Phone Field",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Field Label",
          "default": "Phone Number"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder",
          "default": "Enter your phone number"
        }
      ]
    },
    {
      "type": "checkbox",
      "name": "Checkbox",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Field Label",
          "default": "Agree to Terms"
        },
        {
          "type": "text",
          "id": "description",
          "label": "Description",
          "default": "I agree to the terms and conditions."
        }
      ]
    },



  ],
  "presets": [
    {
      "name": "Contact Form",
      "category": "Custom Sections"
    }
  ]
}
{% endschema %}


<section class="section--steps-form" id="{{ section.settings.section_id }}">
  <div class="section--steps-form-container page-container ">

    <div class="steps-form--column-left">
<div class="section--title-block " >

    <h2>{{ section.settings.section_title }}</h2>
    <div class="section-desc">{{ section.settings.section_description }}</div>

</div>
    
  <div class="contact-wrapper">
  <ul>
    <li><svg xmlns="http://www.w3.org/2000/svg" width="22" height="23" viewBox="0 0 22 23" fill="none">
        <path d="M14.2847 12.0627L17.1192 14.8972C17.4951 15.2731 17.4951 15.8825 17.1192 16.2584C15.087 18.2906 11.8698 18.5192 9.57068 16.7949L7.76171 15.4381C6.01818 14.1305 4.46936 12.5817 3.16171 10.8381L1.80498 9.02917C0.0806234 6.73003 0.309263 3.51281 2.34144 1.48064C2.71732 1.10476 3.32674 1.10476 3.70262 1.48064L6.53714 4.31516C6.92767 4.70569 6.92767 5.33885 6.53714 5.72938L5.41998 6.84654C5.24868 7.01784 5.20621 7.27953 5.31455 7.49621C6.56714 10.0014 8.59847 12.0327 11.1036 13.2853C11.3203 13.3936 11.582 13.3512 11.7533 13.1799L12.8705 12.0627C13.261 11.6722 13.8942 11.6722 14.2847 12.0627Z" fill="#E9F24F" stroke="#E9F24F" stroke-width="1.2" />
      </svg><a href="tel:+17789496782">+1 778-949-6782</a></li>
    <li><svg xmlns="http://www.w3.org/2000/svg" width="22" height="23" viewBox="0 0 22 23" fill="none">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M0.00302631 7.75664C1.05469e-10 8.12231 0 8.5172 0 8.94434V14.0554C0 16.8839 0 18.2981 0.87868 19.1768C1.75736 20.0554 3.17157 20.0554 6 20.0554H16C18.8284 20.0554 20.2426 20.0554 21.1213 19.1768C22 18.2981 22 16.8839 22 14.0554V8.94434C22 8.51719 22 8.1223 21.997 7.75664L11.9713 13.3265C11.3672 13.662 10.6328 13.6621 10.0287 13.3265L0.00302631 7.75664ZM0.114655 5.61733C0.241308 5.6319 0.367264 5.67108 0.485643 5.73685L11 11.5782L21.5144 5.73685C21.6327 5.67108 21.7587 5.6319 21.8853 5.61734C21.774 4.81908 21.5543 4.25602 21.1213 3.82302C20.2426 2.94434 18.8284 2.94434 16 2.94434H6C3.17157 2.94434 1.75736 2.94434 0.87868 3.82302C0.445675 4.25602 0.22605 4.81908 0.114655 5.61733Z" fill="#E9F24F" />
      </svg> <a href="mailto: info@npta.ca">info@npta.ca</a></li>
    <li> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
        <path d="M12 2C9.81273 2.00248 7.71575 2.87247 6.16911 4.41911C4.62247 5.96575 3.75248 8.06273 3.75 10.25C3.75 17.3094 11.25 22.6409 11.5697 22.8641C11.6958 22.9524 11.846 22.9998 12 22.9998C12.154 22.9998 12.3042 22.9524 12.4303 22.8641C12.75 22.6409 20.25 17.3094 20.25 10.25C20.2475 8.06273 19.3775 5.96575 17.8309 4.41911C16.2843 2.87247 14.1873 2.00248 12 2ZM12 7.25C12.5933 7.25 13.1734 7.42595 13.6667 7.75559C14.1601 8.08524 14.5446 8.55377 14.7716 9.10195C14.9987 9.65013 15.0581 10.2533 14.9424 10.8353C14.8266 11.4172 14.5409 11.9518 14.1213 12.3713C13.7018 12.7909 13.1672 13.0766 12.5853 13.1924C12.0033 13.3081 11.4001 13.2487 10.8519 13.0216C10.3038 12.7946 9.83524 12.4101 9.50559 11.9167C9.17595 11.4234 9 10.8433 9 10.25C9 9.45435 9.31607 8.69129 9.87868 8.12868C10.4413 7.56607 11.2044 7.25 12 7.25Z" fill="#E9F24F" />
      </svg><a href="https://www.google.com/maps/place/NPTA+Canada/@49.2789306,-123.1180689,19z/data=!3m1!4b1!4m6!3m5!1s0x548671a1fc09ce87:0x7e701146f2d96c72!8m2!3d49.2789297!4d-123.1174252!16s%2Fg%2F11sw47zzpw?entry=ttu&g_ep=EgoyMDI0MDgyNy4wIKXMDSoASAFQAw%3D%3D" target="_blank">110-856 Homer Street,
        Vancouver, BC Canada V6B 2W5</a></li>
    <li style="color: black; font-family: Arial, sans-serif;">
  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none" style="vertical-align: middle; margin-right: 8px;">
    <path d="M12 2.05542C6.48 2.05542 2 6.53542 2 12.0554C2 17.5754 6.48 22.0554 12 22.0554C17.52 22.0554 22 17.5754 22 12.0554C22 6.53542 17.52 2.05542 12 2.05542ZM12 20.0554C7.58 20.0554 4 16.4754 4 12.0554C4 7.63542 7.58 4.05542 12 4.05542C16.42 4.05542 20 7.63542 20 12.0554C20 16.4754 16.42 20.0554 12 20.0554ZM12.5 7.05542H11V13.0554L16.25 16.1754L17 14.9254L12.5 12.3054V7.05542Z" fill="#E9F24F"/>
</svg>
   <span style="display: block; margin-top: -5px;"> <strong>Business Hours:&nbsp;</strong><br> <strong>Monday to Friday:</strong> &nbsp; 8:00AM PST â€“ 5:00PM PST
   </span>
</li>
  </ul>
  </div>

    </div>

        <div class="steps-form--column-right">

          

         
<div class="form-wrapper1">
  
  <iframe
  src="https://app.npta.ca/widget/form/FRrYnB9wktnxZdg6W8bN"
  style="width:100%;height:100%;border:none;border-radius:0px"
  id="inline-FRrYnB9wktnxZdg6W8bN" 
  data-layout="{'id':'INLINE'}"
  data-trigger-type="alwaysShow"
  data-trigger-value=""
  data-activation-type="alwaysActivated"
  data-activation-value=""
  data-deactivation-type="neverDeactivate"
  data-deactivation-value=""
  data-form-name="Contact Us Form"
  data-height="469"
  data-layout-iframe-id="inline-FRrYnB9wktnxZdg6W8bN"
  data-form-id="FRrYnB9wktnxZdg6W8bN"
  title="Contact Us Form"
      >
</iframe>
</div>
      
  </div>
  </div>
</section>

<script src="https://www.google.com/recaptcha/api.js?render=6Lf762AqAAAAALFi5cjMR1pDOlO3FhZx9vGGqFjJ&badge=bottomleft"></script>
<script>
  function executeRecaptcha(action) {
    return new Promise((resolve) => {
      grecaptcha.ready(function() {
        grecaptcha.execute('6Lf762AqAAAAALFi5cjMR1pDOlO3FhZx9vGGqFjJ', { action: action }).then(function(token) {
          resolve(token);
        });
      });
    });
  }

  function validateEmail(email) {
    const re = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
    return re.test(email);
  }

  function validatePhone(phone) {
    const re = /^[0-9]+$/; // Adjust regex if needed for specific formats
    return re.test(phone);
  }

  function validateText(input) {
    return input.trim() !== "";
  }


  function showError(input, message) {
    const error = document.createElement('div');
    error.className = 'error-message';
    error.textContent = message;
    input.classList.add('error');
    input.parentNode.insertBefore(error, input.nextSibling);
  }

  document.addEventListener('DOMContentLoaded', function() {
    var form = document.getElementById('custom-form');

    if (form) {
      form.addEventListener('submit', async function(event) {
        event.preventDefault(); // Prevent default submission

        var isValid = true;

         
      var honeypotInput = form.querySelector("input[name='honeypot']");
      if (honeypotInput && honeypotInput.value) {
        console.log("Honeypot field filled, possible bot submission.");
        return; 
      }

        // Clear previous errors
        form.querySelectorAll('.error-message').forEach(elem => elem.remove());
        form.querySelectorAll('.error').forEach(elem => elem.classList.remove('error'));

   // Validate text input
      var textInput = form.querySelector("input[type='text']");
      if (textInput && !validateText(textInput.value)) {
        showError(textInput, "This field cannot be empty.");
        isValid = false;
      }

        // Validate email
        var emailInput = form.querySelector("input[type='email']");
        if (emailInput && !validateEmail(emailInput.value)) {
          showError(emailInput, "Please enter a valid email address.");
          isValid = false;
        }

        // Validate phone
        var phoneInput = form.querySelector("input[type='tel']");
        if (phoneInput && !validatePhone(phoneInput.value)) {
          showError(phoneInput, "Please enter a valid phone number.");
          isValid = false;
        }

        // Validate select input
        var selectInput = form.querySelector("select");
        if (selectInput && !selectInput.value) {
          showError(selectInput, "Please select an option.");
          isValid = false;
        }

        // Validate checkbox
        var checkboxInput = form.querySelector("input[type='checkbox']");
        if (checkboxInput && !checkboxInput.checked) {
          showError(checkboxInput, "Please accept the terms.");
          isValid = false;
        }

        // Validate textarea
        var textareaInput = form.querySelector("textarea");
        if (textareaInput && !validateText(textareaInput.value)) {
          showError(textareaInput, "This field cannot be empty.");
          isValid = false;
        }

        // If validation fails, stop form submission
        if (!isValid) {
          return;
        }

        try {
          // Execute reCAPTCHA and get the token
          const token = await executeRecaptcha('submit_form');
          
          // Add the token to the form data
          var formData = new FormData(form);
          formData.append('recaptcha_token', token); // Append token to FormData

          // Send the form data with fetch
          const response = await fetch(form.action, {
            method: 'POST',
            body: formData
          });

          if (response.ok) {
            // Redirect upon success
            window.location.href = '/pages/book-a-call';
          } else {
            // Handle error response
            const errorText = await response.text();
            console.error('Submission error:', errorText);
            alert('There was an error submitting the form. Please try again.');
          }
        } catch (error) {
          console.error('Network error:', error);
          alert('There was a network error. Please try again.');
        }
      });
    }
  });
</script>



<style>

  .section--title-block .section-desc p{
    color: #141414;
    font-family: var(--font-body-family);
font-size: 16px;
font-style: normal;
font-weight: 400;
line-height: 150%; 
    
  }
@media only screen and (min-width: 981px) {
  .section--text-form-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
  .text-form--column-left {
    padding-right: 10%;
  }
}

@media only screen and (max-width: 980px) {
  .section--text-form-container {
    display: grid;
    grid-template-columns: 1fr;
  }
  .text-form--column-left {
    padding-right: 0;
    padding-bottom: 50px;
  }
}

.steps-form--column-left {
  padding-right: 10%;
}

@media only screen and (min-width: 981px) {
  .section--steps-form-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
}
@media only screen and (max-width: 980px) {
  .section--steps-form-container {
    display: grid;
    grid-template-columns: 1fr;
    grid-row-gap: 30px;
  }
}

.section--title-block h2 {
  margin-top: 0;
  margin-bottom: 20px;
}

.section--steps-form {
  background: #fff;
  padding-top: 80px;
  padding-bottom: 80px;
}
.section--steps-form .section--.section--steps-form-container {
  margin: 0 auto;
}
.step-content h3 {
  font-size: 2em;
  margin-bottom: 20px;
}
.step-content {
  border-left: 1px solid #d0d0d0;
  padding-left: 30px;
  position: relative;
}
.step-content:after {
  content: "";
  position: absolute;
  bottom: -34px;
  width: 100%;

  border-bottom: 1px solid #d0d0d0;
}

.step-content p {
  margin-bottom: 40px;
}

.steps-form--column-right .form-wrapper {
  display: flex;
  padding: 40px 24px;
  flex-direction: column;
  align-items: center;
  gap: 24px;
  border-radius: 20px;
  background: #f7f8fa;
  min-height: 300px;
}

@media only screen and (max-width: 600px) {
  form .form-row {
    flex-wrap: wrap;
  }
}

.form-button {
  border: none;
  width: 100%;
}
.form-wrapper {
  display: flex;
  padding: 40px 24px;
  flex-direction: column;
  align-items: center;
  padding: 40px 24px;
  border-radius: 20px;
  background: #f7f8fa;
}
form {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 20px;
}

form .form-row {
  display: flex;
  justify-content: center;
  gap: 15px;
  width: 100%;
}
.form-row .form-column {
  display: flex;
  flex-wrap: Wrap;
  justify-content: flex-start;
  width: 100%;
}
.form-row .form-column label {
  width: 100%;
  color: var(--black, #141414);
    font-family: var(--font-heading-family);
  font-size: 16px;
  font-style: normal;
  font-weight: 700;
  line-height: 150%; /* 24px */
  letter-spacing: 1.28px;
  text-transform: uppercase;
    margin-bottom:10px;
}

.form-row .form-column input {
  display: flex;

  padding: 15px;
  align-items: center;
  gap: 10px;
  border-radius: 6px;
  border: 1px solid #d0d0d0;
  background: #fff;
}

.form-row .form-column input {
  color: #141414;
    font-family: var(--font-body-family);
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: 150%;
  transition: 300ms;
  width: 100%;
}

.form-row .form-column input:focus,
.form-row .form-column input:hover {
  border-radius: 6px;
  border: 1px solid #141414;
  background: #fff;
  transition: 300ms;
  color: #141414;
}

.form-row .form-column textarea {
  width: 100%;
  color: #141414;
    font-family: var(--font-body-family);
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: 150%;
  transition: 300ms;
  border-radius: 6px;
  border: 1px solid #d0d0d0;
  min-height: 120px;
  padding: 15px;
}

.form-row .form-column textarea:focus,
.form-row .form-column textarea:hover {
  border-radius: 6px;
  border: 1px solid #141414;
  background: #fff;
  transition: 300ms;
  color: #141414;
  outline: none;
}
*:focus-visible {
  outline: none !important;
  outline-offset: none !important;
  box-shadow: none !important;
}

.contact-wrapper ul {
  list-style: none;
  padding: 0;
  margin-top:30px;
}
.contact-wrapper ul li {
  display: grid;
  grid-template-columns: 24px auto;
  grid-column-gap: 10px;
  align-items: center;
  margin-bottom: 15px;
}
.contact-wrapper ul li a {
  color: #141414;
    font-family: var(--font-heading-family);
  font-size: 16px;
  font-style: normal;
  font-weight: 700;
  line-height: 150%; /* 24px */
  letter-spacing: 1.28px;
  text-transform: uppercase;
  text-decoration: none;
}

  .contact-wrapper ul li:hover a {
  color: #133257;
transition:300ms;
}

  

</style>